# -*- coding: utf-8 -*-
"""Dice Roll Simulator probability

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JcKTTXIb7SXTPzh72B52k1zDu2b0HM_L
"""

# This code simulates rolling two dice as many times as the user wants and plots the results.
# It improves understanding of randomness and data visualization.
import matplotlib.pyplot as plt
import random

# Get the number of rolls from the user
print ("How many times would you like to flip 2 die? (Up to 1,000,000)")
rolls = input()

# Validate user input
while True:
  try:
    rolls = int(rolls)
    if rolls > 0 and rolls <= 1000000:
      break
    else:
      print ("Not a valid number. Please try again.")
      rolls = input()
  except:
    print ("Not a valid number. Please try again.")
    rolls = input()

dice1 = 0
dice2 = 0
counter = 1
roll_totals = []

# Simulate dice rolls and store the sum in a list
while counter <= rolls:
  dice1 = random.randint(1, 6)
  dice2 = random.randint(1, 6)
  roll_totals.append(dice1 + dice2)
  counter += 1

# Count the occurrences of each sum
counts = {}
for total in roll_totals:
  if total in counts:
    counts[total] += 1
  else:
    counts[total] = 1



# Sort the counts by sum value
sorted_counts = dict(sorted(counts.items()))
sums = list(sorted_counts.keys())
frequencies = list(sorted_counts.values())
print (sorted_counts)

# Calculate probabilities
probabilities = [freq / rolls for freq in frequencies]

# Print the probabilities
print ("Probabilities: ")
for i in range(len(sums)):
  print (f"Sum {sums[i]}: {probabilities[i]:.4f}") # Corrected f-string syntax



# Create and display the histogram of frequencies
plt.figure(figsize=(10, 6))
plt.bar(sums, frequencies, color="red")
plt.xlabel("Sum of Two Dice")
plt.ylabel("Frequency")
plt.title("Histogram of Dice Roll Sums")
plt.xticks(sums)
plt.show()