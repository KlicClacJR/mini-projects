# -*- coding: utf-8 -*-
"""ATM

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12jejnEPKRuPCUtcChGe1cBi5CHgj-kSp
"""

from abc import ABC, abstractmethod
class Account(ABC):
  def __init__ (self, balance, owner):
    self.balance = balance
    self.owner = owner
  def deposit(self, amount):
    self.balance += float(amount)
  @abstractmethod
  def withdraw(self, amount):
    pass
  def show_amount(self):
    return str(self.balance)

class CheckingAccount(Account):
  def withdraw(self, amount):
    self.balance -= float(amount)

class SavingsAccount(Account):
  def withdraw(self, amount):
    self.balance -= float(amount)

class BusinessAccount(Account):
  def __init__(self, balance, owner, overdraft_limit=100000):
    super().__init__(balance, owner)
    self.overdraft_limit = overdraft_limit

  def withdraw(self, amount):
    if float(amount) > self.balance:
      self.balance -= float(amount)
    else:
      self.balance -= float(amount)


print ("Welcome to the ATM! Please Enter your name.")
user_name = input()
user_name = user_name.capitalize()
print ("Hello " + user_name +", what account would you like to see?\n1)Checkings Account\n2)Savings Account\n3)Business Account")
user_choice = input()
if user_choice == "1":
  account = CheckingAccount(1000, user_name)
elif user_choice == "2":
  account = SavingsAccount(10000, user_name)
elif user_choice == "3":
  account = BusinessAccount(5000000, user_name + ".LLC")
else:
  print ("Invalid selection. Defaulting to checkings.")
  account = CheckingAccount(1000, user_name)

while True:
  print ("\nWhat would you like to do?\n1)Deposit\n2)Withdraw\n3)Check Balance\n4)Exit")
  choice = input()
  if choice == "1":
    print ("How much money would you like to deposit?")
    money_depositing = input()
    while True:
      try:
        float(money_depositing)
        if float(money_depositing) > 0:
          account.deposit(money_depositing)
          str_money_depositing = str(money_depositing)
          string_balance = str(account.balance)
          print(f"${str_money_depositing} deposited. New balance: ${string_balance}")
          break
        else:
          print ("Not a valid amount. Please try again.")
          money_depositing = input()
      except ValueError:
        print ("Not a valid amount. Please try again.")
        money_depositing = input()


  elif choice == "2":
    print ("How much money would you like to withdraw?")
    money_withdrawing = input()

    while True:
      try:
        float(money_withdrawing)
        if user_choice == "3":
          if float(money_withdrawing) > 0 and float(money_withdrawing) <= account.balance + account.overdraft_limit:
            account.withdraw(money_withdrawing)
            str_money_withdrawing = str(money_withdrawing)
            string_balance = str(account.balance)
            print(f"${str_money_withdrawing} withdrawn. New balance: ${string_balance}")
            break
          else:
            print ('Insufficient funds in account or you have entered an invalid amount. Please try again.')
            money_withdrawing = input()
        else:
          if float(money_withdrawing) > 0 and float(money_withdrawing) <= account.balance:
            account.withdraw(money_withdrawing)
            str_money_withdrawing = str(money_withdrawing)
            string_balance = str(account.balance)
            print(f"${str_money_withdrawing} withdrawn. New balance: ${string_balance}")
            break
          else:
            print ('Insufficient funds in account or you have entered an invalid amount. Please try again.')
            money_withdrawing = input()
      except ValueError:
        print ("Not a valid amount. Please try again.")
        money_withdrawing = input()

  elif choice == "3":
    money = str(account.show_amount())
    print ("Your current balance: $" + money)

  elif choice == "4":
    print("Thank you for using the ATM. Have a good day.")
    break
  else:
    print ("Invalid choice. Please try again.")